apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "de.thro.inf.prg3.a07"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // (Required) Connect JUnit 5 to the runner
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

	packagingOptions {
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/LICENSE.md'
		exclude 'META-INF/license.txt'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/notice.txt'
		exclude 'META-INF/ASL2.0'
	}
	compileOptions {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    /* Apache commons lang3 - used for StringBuilder, HashcodeBuilder, and so on */
    implementation "org.apache.commons:commons-lang3:$commons_lang3_version"

    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit2_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5_version}"

	// (Optional) If you also have JUnit 4-based tests
	testImplementation "junit:junit:4.12"
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junit5_version}"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit5_version}"

    // (Required) Writing tests for JUnit Jupiter
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:${junit5_version}"
    // (Required) The instrumentation test companion library
    androidTestImplementation "de.mannodermaus.junit5:android-instrumentation-test:${junit5_instrumentation_test_version}"

    // (Required) Runtime dependencies to orchestrate the execution on-device
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5_version}"
    androidTestRuntimeOnly "org.junit.platform:junit-platform-runner:${juni5_platform_runner_version}"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-instrumentation-test-runner:${junit5_instrumentation_test_version}"
}
